name: Commits i tasks
on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  
jobs:
  count_commits_and_tasks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Obtenir Commits dels usuaris
        id: get_contributors
        run: |
          REPO="${{ github.repository }}"
          echo "Repositorio: $REPO"

          CONTRIBUTORS_JSON=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/$REPO/contributors")

          TOTAL_COMMITS=0
          declare -A commits_by_user

          for row in $(echo "${CONTRIBUTORS_JSON}" | jq -r '.[] | @base64'); do
            _jq() {
              echo ${row} | base64 --decode | jq -r ${1}
            }
          echo "${CONTRIBUTORS_JSON}"

            USER=$(_jq '.login')
            COMMITS=$(_jq '.contributions')

            if [[ "$USER" != "github-actions[bot]" ]]; then
                commits_by_user["$USER"]=$COMMITS
                TOTAL_COMMITS=$((TOTAL_COMMITS + COMMITS))
            fi
          done

          OUTPUT_JSON=$(jq -n \
            '{
              Commits: {},
            }')

          for USER in "${!commits_by_user[@]}"; do
            OUTPUT_JSON=$(echo "$OUTPUT_JSON" | jq --arg user "$USER" --argjson commits "${commits_by_user[$USER]}" '.Commits[$user] = $commits')
          done
          OUTPUT_JSON=$(echo "$OUTPUT_JSON" | jq --argjson total_commits "$TOTAL_COMMITS" '.Commits["Total"] = $total_commits')

          echo "$OUTPUT_JSON" | jq . > metrics.json
          cat metrics.json
      - name: Obtenir tasques assignades dels usuaris
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
          REPO: ${{ github.repository }}
        run: |
          PROJECT_NODE_ID="github.com/$OWNER/projects/$PROJECT_ID"

          RESPONSE=$(curl -s -X POST -H "Authorization: bearer $GH_TOKEN" -H "Content-Type: application/json" \
          -d '{
            "query": "query {
              node(id: \"'"$PROJECT_NODE_ID"'\") {
                ... on ProjectV2 {
                  items(first: 100) {
                    nodes {
                      ... on DraftIssue {
                        id
                        title
                        assignees(first: 10) {
                          nodes {
                            login
                          }
                        }
                      }
                    }
                  }
                }
              }
            }"
          }' https://api.github.com/graphql)

          echo "$RESPONSE" | jq '.' > response.json

          if [ ! -f metrics.json ]; then
            echo '{"Commits": {}, "Tasks": {}}' > metrics.json
          fi

          cat response.json | jq -r '
            .data.node.items.nodes[] |
            select(.assignees.nodes != null) |
            {assignees: [.assignees.nodes[].login]}
          ' | jq -s '
            reduce .[] as $task ({}; 
              reduce $task.assignees[] as $user (.; 
                .[$user] = (.[ $user ] // 0) + 1)
            ) | .Total = (reduce .[] as $count (0; . + $count))' > tasks.json

          jq '.Tasks = input' metrics.json tasks.json > temp.json && mv temp.json metrics.json
      - name: Committing results
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git add metrics.json
          git commit -m "Actualitzar metrics.json" || exit 0
          git push
